plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
	id "org.sonarqube" version "4.4.1.3373"
	id 'com.bmuschko.docker-remote-api' version '9.4.0'
}

group = 'com.ratracejoe'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}
// Import task types
import com.bmuschko.gradle.docker.tasks.image.*

// Use task types
task buildAppImage(type: DockerBuildImage) {
	inputDir = projectDir
	images.add('joesharpcs/timesheet_service:latest')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation "org.testcontainers:testcontainers:1.19.0"
	testImplementation "org.testcontainers:postgresql:1.18.3"
	testImplementation 'com.github.dasniko:testcontainers-keycloak:3.0.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
sonar {
	properties {
		property "sonar.projectKey", "timesheet-service"
		property "sonar.organization", "ratracejoe"
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.token", "get from web ui"
	}
}
jacocoTestReport {
	reports {
		xml.required = true
	}
}
project.tasks.sonar.dependsOn("jacocoTestReport")
project.tasks.jacocoTestReport.dependsOn("test")